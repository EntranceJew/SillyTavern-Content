{"version":2,"name":"Groupies","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(204, 18, 18, 0.46)","onlyBorderColor":true,"qrList":[{"id":18,"icon":"fa-newspaper","showLabel":false,"label":"Create","title":"Create a new group","message":"/# Create |\n/qr-arg group_name {{noop}} ||\n/qr-arg lag 10 ||\n/qr-arg big_lag 700 ||\n\n/delay {{arg::lag}} | /forcesave ||\n/delay {{arg::lag}} | /closechat ||\n\n/test left={{arg::group_name}} rule=neq right={{noop}} | /let key=was_named ||\n\n/delay {{arg::lag}} | /dom action=click #rm_button_group_chats ||\n/if left={{var::was_named}} rule=eq right=true else={: /timestamp | /pass :} {: /pass {{arg::group_name}} :} | /setglobalvar key=group_name {{pipe}} ||\n/delay {{arg::lag}} | /dom action=value value=\"{{getglobalvar::group_name}}\" #rm_group_chat_name ||\n/delay {{arg::lag}} | /dom action=click #rm_group_submit ||\n/delay {{arg::big_lag}} | /go {{getglobalvar::group_name}} ||\n/delay {{arg::big_lag}} | /ctx groupId | /let key=group_id ||\n\n/* if we want to rename the group, we have to do it here after temporarily using a timestamp as the group name *|\n/if left={{var::was_named}} rule=not {:\n\t/setglobalvar key=group_name {{var::group_id}} ||\n\t/delay {{arg::lag}} | /dom action=value value=\"{{getglobalvar::group_name}}\" #rm_group_chat_name ||\n:} ||\n/let key=group_name {{getglobalvar::group_name}} | /flushglobalvar group_name ||\n\n/pass {\n\t\"group_name\": \"{{var::group_name}}\",\n\t\"group_id\": \"{{var::group_id}}\"\n}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":20,"icon":"fa-fill-drip","showLabel":false,"label":"Fill","title":"Fill a group with the specified quantity of characters","message":"/# Fill |\n/qr-arg members 5 ||\n\n/ctx characters(map avatar) | /pick items={{arg::members}} {{pipe}} | /let key=picked_chars {{pipe}} ||\n/foreach {{var::picked_chars}} {:\n  /member-add {{var::item}} ||\n:} ||\n/pass {{var::picked_chars}} ||","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":24,"icon":"fa-beer-mug-empty","showLabel":false,"label":"Empty","title":"Empty a group of all characters","message":"/# Empty |\n/ctx groupId | /qr-arg group_id {{pipe}} ||\n\n/ctx groups(find id eq {{arg::group_id}})::members | /let key=members_to_remove {{pipe}} ||\n/len {{var::members_to_remove}} | /let key=num_members_init ||\n/if left={{var::num_members_init}} rule=gte right=1 {:\n\t/foreach {{var::members_to_remove}} {:\n\t\t/member-remove {{var::item}} ||\n\t:} ||\n\t\n\t/ctx groups(find id eq {{arg::group_id}})::members | /let key=members_not_removed {{pipe}} ||\n\t/len {{var::members_not_removed}} | /let key=num_members_remain ||\n\t/sub num_members_init num_members_remain | /let key=num_members_removed ||\n\t\n\t/pass {\n\t\t\"num_init\": {{var::num_members_init}},\n\t\t\"num_remain\": {{var::num_members_remain}},\n\t\t\"num_removed\": {{var::num_members_removed}}\n\t} ||\n:} else={:\n\t/pass {num_init: {{var::num_members_init}}, num_remain: 0, num_removed: 0 }\n:}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":28,"icon":"fa-campground","showLabel":false,"label":"GetMembers","title":"Get a list of all members in a group","message":"/# GetMembers |\n/ctx groupId | /qr-arg group_id {{pipe}} ||\n/qr-arg no_ext true ||\n/qr-arg include_user false ||\n\n/ctx groups(find id eq {{arg::group_id}})::members | /let key=members ||\n/setvar key=safe_members {{var::members}} ||\n\n/if left={{arg::include_user}} rule=eq right=true {:\n\t/len {{getvar::safe_members}} | /setat value={{getvar::safe_members}} index=[{{pipe}}] {{user}} ||\n\t/reverse {{getvar::safe_members}} | /setvar key=safe_members ||\n:} ||\n\n/if left={{arg::no_ext}} rule=eq right=true {:\n\t/foreach {{getvar::safe_members}} {:\n\t\t/re-replace find=\"/\\.png/ig\" replace=\"\" {{var::item}} | /setvar key=safe_members index={{var::index}} {{pipe}} ||\n\t:} ||\n:} ||\n\n/let key=out {{getvar::safe_members}} | /flushvar safe_members ||\n/pass {{var::out}} ||\n\n","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":32,"icon":"fa-address-book","showLabel":false,"label":"NewChat","title":"Create a new chat for a group without any existing messages","message":"/# NewChat |\n/qr-arg yap false ||\n\n/test left=[{{noop}},\"0\"] rule=in right={{lastMessageId}} | /let key=was_empty ||\n/newchat delete={{pipe}} ||\n/if left={{arg::yap}} rule=neq right=\"true\" {:\n\t/cut 0-{{lastMessageId}} ||\n:} ||\n/pass {{var::was_empty}} ||","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":30,"icon":"fa-hands-bubbles","showLabel":false,"label":"Prompt","title":"Prompt a scenario using the member list","message":"/# Prompt |\n/qr-arg get_members true ||\n/qr-arg pre_prompt \"Create a three paragraph long brief to begin a scenario with, involving these characters:\" ||\n\n/setvar key=group_prompt {{arg::pre_prompt}} ||\n/if left={{arg::get_members}} rule=eq right=true {:\n\t/:Groupies.GetMembers include_user=true no_ext=true | /let key=prompt_members {{pipe}} ||\n\t/foreach {{var::prompt_members}} {:\n\t\t/setvar key=group_prompt \"{{getvar::group_prompt}}{{newline}}  - {{var::item}}\" ||\n\t:} ||\n:} ||\n\n/let key=final_prompt {{getvar::group_prompt}} | /flushvar group_prompt ||\n/sys compact=true \"Creating scenario ...\" ||\n/genraw lock=on as=system {{var::final_prompt}} | /let key=out_prompt ||\n/cut {{lastMessageId}} ||\n/pass {{var::out_prompt}}","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""},{"id":16,"icon":"fa-hat-wizard","showLabel":false,"label":"Wizard","title":"Create a group (or shuffle the members of an existing group) with a prompt and scenario","message":"/* Groupies.Wizard *|\n/ctx groupId | /qr-arg group_id {{pipe}} ||\n\n/setvar key=group_id {{arg::group_id}} ||\n/if left={{arg::group_id}} rule=eq right={{noop}} {:\n\t/timestamp | /input default={{pipe}} rows=1 okButton=\"Accept\" \"Name the group:\" | /let key=group_name ||\n\t/:Groupies.Create group_name={{var::group_name}} ||\n:} ||\n\n/input default=\"5\" rows=1 okButton=\"Generate\" \"How many participants?\" | /setglobalvar key=fill_line ||\n\n/setvar key=choice \"0\" ||\n/while left=choice rule=neq right=\"1\" {:\n\t/:Groupies.Empty ||\n\t/:Groupies.Fill members={{getglobalvar::fill_line}} ||\n\t/:Groupies.NewChat yap=false ||\n\t/setvar key=choice \"0\" ||\n\t/setvar key=member_names \"\" ||\n\t/:Groupies.GetMembers include_user=true no_ext=true | /setvar key=members ||\n\t/getvar members | /join glue=\", \" | /setvar key=member_names ||\n\t/getvar members | /join glue=\"{{newline}} - \" | /setvar key=member_list \"{{newline}} - {{user}}{{newline}} - {{pipe}}\" ||\n\t/popup okButton=\"Accept\" cancelButton=\"Reroll\" result=true \"Cast:{{newline}}{{getvar::member_names}}\" | /setvar key=choice ||\n\t/if left={{getvar::choice}} rule=eq right={{noop}} \"/break Cancel\" ||\n:} ||\n\n/if left={{getvar::choice}} rule=eq right={{noop}} \"/break Cancel\" ||\n\n/setvar key=first_prompt \"\" ||\n/setvar key=choice \"0\" ||\n/setglobalvar key=pre_prompt \"Create a three paragraph long brief to begin a scenario with, involving these characters:{{getvar::member_list}}\" ||\n/while left=choice rule=neq right=\"1\" {:\n\t/input default={{getglobalvar::pre_prompt}} okButton=\"Accept\" \"Initial Prompt:\" | /setglobalvar key=pre_prompt ||\n\t/:Groupies.Prompt get_members=false pre_prompt={{getglobalvar::pre_prompt}} | /setvar key=first_prompt ||\n\t\n\t/popup okButton=\"Accept\" cancelButton=\"Reroll\" result=true \"Initial Prompt:{{newline}}{{getvar::first_prompt}}\" | /setvar key=choice ||\n\t/if left=choice rule=eq right={{noop}} \"/break Cancel\" ||\n:} ||\n\n/if left={{getvar::choice}} rule=eq right={{noop}} \"/break Cancel\" ||\n\n/sys {{getvar::first_prompt}} ||\n\n\n/flushglobalvar pre_prompt ||\n/flushvar members ||\n/flushvar member_list ||\n/flushvar member_names ||\n/flushvar first_prompt ||\n/flushvar choice ||\n/flushvar group_id ||\n/flushglobalvar fill_line ||\n\n/echo title=\"Groupies.Wizard\" \"Good luck, have fun.\" ||","contextList":[],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":false,"executeOnAi":false,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":32}